version: "3.8"

services:
  db:
    image: postgres:16
    container_name: itsm_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME:-tendai}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-Mybreak28#}
      POSTGRES_DB: itsm_api_development
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - itsm_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME:-tendai}"]
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: itsm_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_USERNAME: ${DB_USERNAME:-tendai}
      DB_PASSWORD: ${DB_PASSWORD:-Mybreak28#}
      DB_HOST: db
      DB_PORT: 5432
      RAILS_ENV: development
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-your-secret-key}
    ports:
      - "3000:3000"
    volumes:
      - .:/rails
    command: >
      bash -c "
      echo 'Waiting for Postgres...';
      while ! pg_isready -h db -p 5432 -U ${DB_USERNAME:-tendai}; do
        sleep 2;
      done;
      echo 'Postgres is ready!';
      /rails/bin/docker-entrypoint
      "
    networks:
      - itsm_network

volumes:
  pg_data:

networks:
  itsm_network:
    driver: bridge
